<div id="search-container">
    <form id="search-conversation-form">
        <input
          type="text"
          placeholder="Search"          
          name="search_user"
          id="search_user"
          autocomplete="off"
        />
        <p class="error_search"></p>
        <div class="search_users"></div>
        <input type="submit" value="Submit" class="hide" />
    </form>

    <!-- <input type="text" placeholder="Search" /> -->
</div>

<script>
  let typingTimer01;
  const doneTypingInterval_search = 500;
  const input_search = document.querySelector("input#search_user");
  const conversation_list_search = document.querySelector("#conversation-list");
  let users_placeholder_search = document.querySelector(".search_users");


   //on keyup, start the countdown
   input_search.addEventListener("keyup", function () {
    clearTimeout(typingTimer01);
    // reset
    users_placeholder_search.style.display = "none";

    if (input_search.value) {
      typingTimer01 = setTimeout(searchUsers01, doneTypingInterval_search); //user is "finished typing," send search request
    }
  });




  //on keydown, clear the countdown
  input_search.addEventListener("keydown", function () {
    clearTimeout(typingTimer01);
  });

  // send request for search
  async function searchUsers01() {
    let response = await fetch("/inbox/search", {
      method: "POST",
      body: JSON.stringify({
        user: input_search.value,
      }),
      headers: {
        "Content-type": "application/json; charset=UTF-8",
      },
    });

    // get response
    let result = await response.json();
    
    // handle error and response
    if (result.errors) {
      const errorplaceholder = document.querySelector("p.error_search");
      errorplaceholder.textContent = result.errors.common.msg;
      errorplaceholder.style.display = "block";
    } else {
      if (result.length > 0) {
        let generatedHtml = "<ul>";
        result.forEach((user) => {
          const avatar = user.avatar
            ? "./uploads/avatars/" + user.avatar
            : "./images/nophoto.png";

          generatedHtml += `<li onclick="createConversation01('${user._id}', '${user.name}', '${user.avatar}')">
              <div class="user">
                <div class="avatar">
                  <img width="20px" src="${avatar}" />
                </div>
                <div class="username">${user.name}</div>
              </div>
            </li>`;
        });
        generatedHtml += "</ul>";
        users_placeholder_search.innerHTML = generatedHtml;
        users_placeholder_search.style.display = "block";
        users_placeholder_search.style.width = "15%";
        users_placeholder_search.style.top = "113px";

      }
    }
  }

  // create Conversation
  async function createConversation01(participant_id, name, avatar) {
    try {
      const response = await fetch("/inbox/conversation", {
        method: "POST",
        body: JSON.stringify({
          participant: name,
          id: participant_id,
          avatar: avatar != "undefined" ? avatar : null,
        }),
        headers: {
          "Content-type": "application/json; charset=UTF-8",
        },
      });

      const result = response.json();
      console.log(result)
      if (!result.errors) {
        // reset
        users_placeholder_search.style.display = "none";
        input_search.value = name;
        // reload the page after 1 second
        setTimeout(() => {
          location.reload();
        }, 1000);
      } else {
        throw new Error(result.errors.common.msg);
      }
    } catch (err) {
      conversationFailureToast.showToast();
    }
  }


</script>